{"ast":null,"code":"var _jsxFileName = \"D:\\\\webGhoul\\\\web-development\\\\Portfolio\\\\React-Projects\\\\blogging-app\\\\src\\\\Routes\\\\Blogs\\\\Blogs.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect, useCallback } from 'react';\nimport Blog from \"../../components/Blog/Blog\";\nimport { MdKeyboardArrowRight } from \"react-icons/md\";\nimport { Link } from \"react-router-dom\";\nimport img1 from \"../../images/oldMan.png\";\nimport img2 from \"../../images/youngMan.jfif\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport maleImg from \"../../images/male.png\";\nimport femaleImg from \"../../images/female.jpg\";\nimport { database } from \"../../firebase\";\nimport './Blogs.modulus.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Blogs = () => {\n  _s();\n  const [blogs, setBlogs] = useState();\n  const collectionRefBlogs = collection(database, 'blogs');\n  const getUserBlogs = useCallback(() => {\n    getDocs(collectionRefBlogs).then(response => {\n      let allBlogs = [];\n      response.docs.map(blog => {\n        allBlogs.push(blog.data());\n      });\n      setBlogs(allBlogs);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [collectionRefBlogs]);\n  useEffect(() => {\n    getUserBlogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contain\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"All Blogs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MdKeyboardArrowRight, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Blogs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"blogs\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contain\",\n        children: blogs ? blogs.sort((a, b) => {\n          const [monthA, dayA, yearA] = a.date.split('/');\n          const [hoursA, minutesA, secondsA] = a.time.split(':');\n          const [monthB, dayB, yearB] = b.date.split('/');\n          const [hoursB, minutesB, secondsB] = b.time.split(':');\n          const dateA = new Date(+yearA, +monthA - 1, +dayA, +hoursA, +minutesA, +secondsA);\n          const dateB = new Date(+yearB, +monthB - 1, +dayB, +hoursB, +minutesB, +secondsB);\n          return b.id - a.id;\n        }).map((blog, i) => /*#__PURE__*/_jsxDEV(Blog, {\n          data: {\n            img: blog.photo ? blog.photo : blog.idGender === 'male' ? maleImg : femaleImg,\n            info: {\n              name: blog.username,\n              email: blog.email\n            },\n            quote: blog.blog,\n            duration: {\n              date: blog.date,\n              time: blog.time\n            }\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" No Blogs Found \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Blogs, \"Y9u2qJhVt2zUrcMG/5OIqWuFgkQ=\");\n_c = Blogs;\nexport default Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Blog","MdKeyboardArrowRight","Link","img1","img2","collection","getDocs","maleImg","femaleImg","database","Blogs","blogs","setBlogs","collectionRefBlogs","getUserBlogs","then","response","allBlogs","docs","map","blog","push","data","catch","error","console","log","sort","a","b","monthA","dayA","yearA","date","split","hoursA","minutesA","secondsA","time","monthB","dayB","yearB","hoursB","minutesB","secondsB","dateA","Date","dateB","id","i","img","photo","idGender","info","name","username","email","quote","duration"],"sources":["D:/webGhoul/web-development/Portfolio/React-Projects/blogging-app/src/Routes/Blogs/Blogs.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect, useCallback } from 'react'\r\nimport Blog from \"../../components/Blog/Blog\"\r\nimport { MdKeyboardArrowRight } from \"react-icons/md\"\r\nimport { Link } from \"react-router-dom\"\r\nimport img1 from \"../../images/oldMan.png\"\r\nimport img2 from \"../../images/youngMan.jfif\"\r\nimport { collection, getDocs } from \"firebase/firestore\"\r\nimport maleImg from \"../../images/male.png\"\r\nimport femaleImg from \"../../images/female.jpg\"\r\nimport { database } from \"../../firebase\"\r\nimport './Blogs.modulus.css'\r\n\r\n\r\nconst Blogs = () => {\r\n    const [blogs, setBlogs] = useState()\r\n    const collectionRefBlogs = collection(database, 'blogs')\r\n\r\n    const getUserBlogs = useCallback(() => {\r\n        getDocs(collectionRefBlogs).then((response) => {\r\n            let allBlogs = []\r\n            response.docs.map((blog) => {\r\n                allBlogs.push(blog.data())\r\n            })\r\n            setBlogs(allBlogs)\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }, [collectionRefBlogs])\r\n\r\n    useEffect(() => {\r\n        getUserBlogs()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <section className=\"title\">\r\n                <div className=\"contain\">\r\n                    <div className=\"overlay\"></div>\r\n                    <div className=\"content\">\r\n                        <h1>All Blogs</h1>\r\n                        <h5>\r\n                            <Link to=\"/\">Home</Link>\r\n                            <MdKeyboardArrowRight />\r\n                            <p>Blogs</p>\r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"blogs\">\r\n                <div className=\"contain\">\r\n                    {\r\n                        blogs ? blogs.sort((a, b) => {\r\n                            const [monthA, dayA, yearA] = a.date.split('/');\r\n                            const [hoursA, minutesA, secondsA] = a.time.split(':');\r\n                            const [monthB, dayB, yearB] = b.date.split('/');\r\n                            const [hoursB, minutesB, secondsB] = b.time.split(':');\r\n                            const dateA = new Date(+yearA, +monthA - 1, +dayA, +hoursA, +minutesA, +secondsA);\r\n                            const dateB = new Date(+yearB, +monthB - 1, +dayB, +hoursB, +minutesB, +secondsB);\r\n                            return b.id - a.id\r\n                        }).map((blog, i) => (\r\n                            <Blog key={i} data={{ img: (blog.photo ? blog.photo : (blog.idGender === 'male' ? maleImg : femaleImg)), info: { name: blog.username, email: blog.email }, quote: blog.blog, duration: { date: blog.date, time: blog.time } }} />\r\n                        )) : (<h3> No Blogs Found </h3>)\r\n                    }\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Blogs"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}